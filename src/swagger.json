{
  "openapi": "3.0.0",
  "info": {
    "title": "Meal Schedule",
    "description": "This is the documentation to the meal schedule, an api to control the daily meals",
    "version": "1.0.0",
    "contact": {
      "email": "gabriel.pdmarcos@gmail.com"
    }
  },
  "paths": {
    "/sessions": {
      "post": {
        "tags": ["Authorization"],
        "summary": "Authentication profile",
        "description": "To authentication a profile, use the following route and schema",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": { "type": "string" },
                  "password": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": { "type": "string" },
                    "profile": {
                      "type": "object",
                      "properties": {
                        "name": { "type": "string" },
                        "email": { "type": "string" }
                      }
                    },
                    "refresh_token": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User or password incorrect!"
          }
        }
      }
    },
    "/refresh-token": {
      "post": {
        "tags": ["Authorization"],
        "summary": "Refresh a profile token",
        "description": "To refresh a profile token, use the following route and schema",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": { "type": "string" },
                    "refresh_token": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Refresh token does not exists"
          }
        }
      }
    },
    "/profiles": {
      "post": {
        "tags": ["Profiles"],
        "summary": "Create a new profile",
        "description": "To create a new profile, use the following route and schema",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Profile"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Profile"
                }
              }
            }
          },
          "400": {
            "description": "Profile already exists"
          }
        }
      },
      "get": {
        "tags": ["Profiles"],
        "summary": "List all profiles",
        "description": "To list all profiles, use the following route",
        "security": [
          { "bearerAuth": [] }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Profile"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Profiles"],
        "summary": "Update a profile",
        "description": "To update a profile, use the following route and schema",
        "security": [
          { "bearerAuth": [] }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Profile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Profile"
                }
              }
            }
          },
          "400": {
            "description": "Profile does not exists"
          }
        }
      }
    },
    "/profiles/{id}": {
      "delete": {
        "tags": ["Profiles"],
        "summary": "Delete a profile",
        "description": "To delete a profile, use the following route",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "Profile id",
          "required": true,
          "schema": { "type": "string" }
        }],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Profile does not exists"
          }
        }
      }
    },
    "/profiles/me": {
      "get": {
        "tags": ["Profiles"],
        "summary": "Get information of an authenticated profile",
        "description": "To get the information of the authenticated profile, use the following route",
        "security": [
          { "bearerAuth": [] }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Profile"
                }
              }
            }
          }
        }
      }
    },
    "/meals": {
      "post": {
        "tags": ["Meals"],
        "summary": "Create a new meal",
        "description": "To create a new meal, use the following route and schema",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Meal"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Meal"
                }
              }
            }
          },
          "400": {
            "description": "A meal already exists in the same day and period"
          }
        }
      },
      "get": {
        "tags": ["Meals"],
        "summary": "List all meals",
        "description": "To list all meals, use the following route",
        "security": [
          { "bearerAuth": [] }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Meal"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/meals/{id}": {
      "delete": {
        "tags": ["Meals"],
        "summary": "Delete a meal",
        "description": "To delete a meal, use the following route",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "Meal id",
          "required": true,
          "schema": { "type": "string" }
        }],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Meal does not exists"
          }
        }
      },
      "put": {
        "tags": ["Meals"],
        "summary": "Update a profile",
        "description": "To update a profile, use the following route and schema",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "Meal id",
          "required": true,
          "schema": { "type": "string" }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Meal"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Meal"
                }
              }
            }
          },
          "400": {
            "description": "Meal does not exists"
          }
        }
      }
    },
    "/meals/{period}": {
      "get": {
        "tags": ["Meals"],
        "summary": "List meals by period",
        "description": "To list the meals by a period, use the following route",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [{
          "name": "period",
          "in": "path",
          "description": "Meal Period",
          "required": true,
          "schema": { "type": "string" }
        }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Meal"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Profile": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "email": { "type": "string" },
        "user": { "type": "string" },
        "password": { "type": "string" }
      }
    },
    "Meal": {
      "type": "object",
      "properties": {
        "description": { "type": "string" },
        "meal_date": { "type": "date" },
        "period": { "type": "string" },
        "profile_id": { "type": "string" },
        "ga_code": { "type": "string" }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}